# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
# 5d081333-2c77-414d-b218-632d488b353d
version: "3.8"

services:
  qdrant-vector-db:
    image: qdrant/qdrant
    container_name: qdrant-vector-db
    ports:
      - "6333:6333"
      - "6334:6334"
  mongodb:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: agents
      MONGO_INITDB_ROOT_PASSWORD: agents
    ports:
      - "27017:27017"
  groq-service:
    image: navchetna/groq:latest
    container_name: groq-service
    ports:
      - "5099:8000"
    volumes:
      - "./cache:/root/.cache"
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      GROQ_API_KEY: ${GROQ_API_KEY}
      HTTP_PROXY: ${HTTP_PROXY}
      HTTPS_PROXY: ${HTTPS_PROXY}
  tei-reranking-service:
    image: ghcr.io/huggingface/text-embeddings-inference:cpu-1.7
    container_name: tei-reranking-server
    ports:
      - "6041:80"
    volumes:
      - "${MODEL_CACHE:-./data}:/data"
    shm_size: 1g
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      HF_TOKEN: ${HF_TOKEN}
      HF_HUB_DISABLE_PROGRESS_BARS: 1
      HF_HUB_ENABLE_HF_TRANSFER: 0
    command: --model-id ${RERANK_MODEL_ID} --auto-truncate


  backend-service:
    build:
      context: ../../
      dockerfile: ./comps/Dockerfile
      target: comps-base
      args:
        - http_proxy=http://proxy-dmz.intel.com:912
        - https_proxy=http://proxy-dmz.intel.com:912
        - HTTP_PROXY=http://proxy-dmz.intel.com:912
        - HTTPS_PROXY=http://proxy-dmz.intel.com:912
        - no_proxy=${no_proxy}
    container_name: backend-service

    
    ports:
      - "${CHATQNA_BACKEND_PORT:-8888}:${CHATQNA_BACKEND_PORT:-8888}"
    depends_on:
      - qdrant-vector-db
      - mongodb
      - groq-service
      - tei-embedding-service
      - tei-reranking-service
      - retriever
      - dataprep-qdrant-service
    environment:
      - MEGA_SERVICE_PORT=${CHATQNA_BACKEND_PORT:-8888}
      - MONGO_USERNAME=${MONGO_USERNAME:-agents}
      - MONGO_PASSWORD=${MONGO_PASSWORD:-agents}
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_DBNAME=${MONGO_DBNAME:-railtel-db}
      - EMBEDDING_SERVER_HOST_IP=tei-embedding-service
      - EMBEDDING_SERVER_PORT=80
      - RETRIEVER_SERVICE_HOST_IP=retriever
      - RETRIEVER_SERVICE_PORT=7000
      - RERANK_SERVER_HOST_IP=tei-reranking-service
      - RERANK_SERVER_PORT=80
      - LLM_SERVER_HOST_IP=groq-service
      - LLM_SERVER_PORT=8000
      - LLM_MODEL_ID=${LLM_MODEL_ID}
      - no_proxy=${no_proxy}
      - http_proxy=${http_proxy}
      - https_proxy=${https_proxy}
      - HOST=0.0.0.0
    restart: unless-stopped

  ui-service:
    build:
      context: /home/intel/Akshit/Lenovo/design-patterns/rag
      dockerfile: install/docker/Dockerfile
      args:
        - API_BASE_URL=http://10.138.186.78:${CHATQNA_BACKEND_PORT:-8888}
        - SERVER_URL=http://10.138.186.78:${CHATQNA_BACKEND_PORT:-8888}
        - DATAPREP_URL=http://10.138.186.78:6043            
        - http_proxy=http://proxy-dmz.intel.com:912
        - https_proxy=http://proxy-dmz.intel.com:912
        - HTTP_PROXY=http://proxy-dmz.intel.com:912
        - HTTPS_PROXY=http://proxy-dmz.intel.com:912
        - no_proxy=${no_proxy}
    container_name: ui-service
    ports:
      - "3000:3000"
    depends_on:
      - backend-service
    environment:
      - NEXT_PUBLIC_SERVER_URL=http://10.138.186.78:${CHATQNA_BACKEND_PORT:-8888}
    restart: unless-stopped


  tei-embedding-service:
    image: ghcr.io/huggingface/text-embeddings-inference:cpu-1.7
    container_name: tei-embedding-server
    ports:
      - "6040:80"
    volumes:
      - "${MODEL_CACHE:-./data}:/data"
    shm_size: 1g
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      HUGGINGFACEHUB_API_TOKEN: ${HF_TOKEN}
    command: --model-id ${EMBEDDING_MODEL_ID} --auto-truncate
  retriever:
    image: lenovo-retriever:latest
    container_name: retriever-qdrant-server
    depends_on:
      - qdrant-vector-db
    ports:
      - "6045:7000"
    ipc: host
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      QDRANT_HOST: qdrant-vector-db
      QDRANT_PORT: 6333
      # INDEX_NAME: rag-qdrant
      # QDRANT_INDEX_NAME: rag-qdrant
      TEI_EMBEDDING_ENDPOINT: http://tei-embedding-service:80
      LOGFLAG: ${LOGFLAG}
      RETRIEVER_COMPONENT_NAME: "OPEA_RETRIEVER_QDRANT"
    restart: unless-stopped
  dataprep-qdrant-service:
    image: lenovo-dataprep:latest
    container_name: dataprep-qdrant-server
    depends_on:
      - qdrant-vector-db
      - tei-embedding-service
    ports:
      - "6043:5000"
    volumes:
      - ./dataprep-cache:/home/user/.cache
      - ./dataprep-static:/usr/local/lib/python3.11/site-packages/static
      - ./dataprep-output:/home/user/comps/dataprep/src/out
    environment:
      no_proxy: "localhost,127.0.0.1,qdrant-vector-db,tei-embedding-service, groq-service, huggingface.co,*.huggingface.co"  # ADD/UPDATE THIS
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      QDRANT_HOST: qdrant-vector-db
      QDRANT_PORT: 6333
      LLM_SERVER_HOST_IP: groq-service  # Add this
      LLM_SERVER_PORT: 8000   
      LLM_MODEL_ID: llama-3.1-8b-instant      # Add this
      LLM_USE_MODEL_PARAM: "true"           
      # QDRANT_INDEX_NAME: rag-qdrant
      # INDEX_NAME: rag-qdrant
      TEI_EMBEDDING_ENDPOINT: http://tei-embedding-service:80
      HF_TOKEN: ${HF_TOKEN}
      HUGGINGFACEHUB_API_TOKEN: ${HUGGINGFACEHUB_API_TOKEN}
      DATAPREP_COMPONENT_NAME: "OPEA_DATAPREP_QDRANT"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/v1/health_check || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 50
    restart: unless-stopped

networks:
  default:
    driver: bridge
